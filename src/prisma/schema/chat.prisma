model Chat {
  id              String    @id @default(uuid())
  color           ChatColor
  type            ChatType
  title           String
  description     String?
  createdAt       DateTime  @default(now())
  isSavedMessages Boolean

  members      ChatMember[]
  messages     Message[]
  lastMessage  Message?     @relation(name: "LastMessageIn")
  firstMessage Message?     @relation(name: "FirstMessageIn")
}

model ChatMember {
  id String @id @default(uuid())

  isOwner    Boolean
  isPinned   Boolean @default(false)
  isMuted    Boolean @default(false)
  isArchived Boolean @default(false)

  unreadCount                 Int  @default(0)
  myLastReadMessageSequenceId Int?

  lastVisibleMessage   Message? @relation(fields: [lastVisibleMessageId], references: [id])
  lastVisibleMessageId String?
  // @todo change to setnull
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String
  Chat                 Chat?    @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId               String?

  @@unique([chatId, userId], name: "compositeMemberId")
}

enum ChatType {
  PRIVATE
  GROUP
  CHANNEL
}
