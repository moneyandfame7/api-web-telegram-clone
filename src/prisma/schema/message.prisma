model Message {
  id         String @id @unique @default(uuid())
  sequenceId Int

  text String?

  chat   Chat   @relation(fields: [chatId], references: [id])
  chatId String

  lastInChat   Chat?   @relation(name: "LastMessageIn", fields: [lastInChatId], references: [id])
  lastInChatId String? @unique

  firstInChat   Chat?   @relation(name: "FirstMessageIn", fields: [firstInChatId], references: [id])
  firstInChatId String? @unique

  sender   User   @relation(fields: [senderId], references: [id])
  senderId String

  createdAt DateTime  @default(now())
  editedAt  DateTime?

  replyToMessageId String?
  replyToMessage   Message? @relation("ReplyTo", fields: [replyToMessageId], references: [id])

  repliedIn Message[] @relation(name: "ReplyTo")

  deletedByUsers      User[]       @relation(name: "DeletedMessagesByUsers")
  lastVisibleForUsers ChatMember[]

  @@unique([chatId, sequenceId], name: "compositeSequenceId")
}
